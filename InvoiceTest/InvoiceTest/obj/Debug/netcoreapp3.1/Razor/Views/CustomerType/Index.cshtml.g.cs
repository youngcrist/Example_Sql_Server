#pragma checksum "C:\Users\young\source\repos\InvoiceTest\InvoiceTest\Views\CustomerType\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "056c584336eef97832b263ec514ef6f26937c52d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CustomerType_Index), @"mvc.1.0.view", @"/Views/CustomerType/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\young\source\repos\InvoiceTest\InvoiceTest\Views\_ViewImports.cshtml"
using InvoiceTest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\young\source\repos\InvoiceTest\InvoiceTest\Views\_ViewImports.cshtml"
using InvoiceTest.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"056c584336eef97832b263ec514ef6f26937c52d", @"/Views/CustomerType/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3360a2c5c60e09260673a024093b39bc1e18ca7d", @"/Views/_ViewImports.cshtml")]
    public class Views_CustomerType_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""Container"">
    <div class=""mt-4 row"">
        <div>
            <h4>Customer type</h4>
        </div>
        <dov>
            <button class=""ml-3 btn btn-primary"" onclick=""updateCustomerType(0)"">Add</button>
        </dov>
    </div>
    <div class=""mt-3 col-12"">
        <table class=""table table-striped"">
            <thead>
                <tr>
                    <th class=""col-3"">ID</th>
                    <th class=""col"">Description</th>
                    <th class=""col""></th>
                    <th class=""col""></th>
                </tr>
            </thead>
            <tbody id=""tblBody""></tbody>
        </table>
    </div>
</div>
");
#nullable restore
#line 25 "C:\Users\young\source\repos\InvoiceTest\InvoiceTest\Views\CustomerType\Index.cshtml"
Write(await Html.PartialAsync("_AddCustomerType"));

#line default
#line hidden
#nullable disable
            WriteLiteral(" \r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function () {
            var message = ''
            $.get(""CustomerType/ListCustomerType"").done(function (res) {

                var object = '';
                $.each(res, function (index, item) {
                    object += '<tr>';
                    object += '<td scope=""row"">' + item.id + '</td>';
                    object += '<td>' + item.description + '</td>';
                    object += '<td><button class=""btn btn-warning"" onclick=""updateCustomerType(' + item.id + ')"">Update</button></td>';
                    object += '<td><a href=""CustomerType/DeleteCustomerType/' + item.id + '"" class=""btn btn-danger"">Delete</a></td>';
                    object += '</tr>';
                });

                $(""#tblBody"").html(object);
            });

            //$('#dtnAddCustomerType').click(function () {
            //    $('#EditTypeModal').modal('show')
            //
            //});
            

            $('#form').submit(function () {
   ");
                WriteLiteral(@"             var form = {
                    id: $('#id').val(),
                    description: $('#description').val()
                }

                if (form.description == '') {
                    message = '<label style=""color:red"">please complete the field.</label>'
                    $('.errorField').html(message);
                } else {
                    $.post(""CustomerType/SaveChangeCustomerType"", form)
                }
               
            });
        });
        function updateCustomerType(id) {
            if (id !== 0) {
                $.get(""CustomerType/GetCustomerType"", { id }).done(res => {
                    $('#EditTypeModal').modal('show');
                    $('#id').val(res.id)
                    $('#description').val(res.description)
                });
            } else {
                $('#EditTypeModal').modal('show');

                $('#id').val(0)
                $('#description').val('')
            }

            
        ");
                WriteLiteral("}\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
